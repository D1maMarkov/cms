# Generated by Django 4.2 on 2024-04-25 20:32

import blocks.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_name', models.CharField(max_length=50, unique=True, verbose_name='Имя компонента')),
                ('block_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Заголовок')),
                ('url', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Страница',
                'verbose_name_plural': 'Страницы',
                'ordering': ['url'],
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название шаблона')),
                ('file', models.CharField(max_length=50, validators=[blocks.validators.validate_html_filename], verbose_name='Название файла (например base.html)')),
            ],
            options={
                'verbose_name': 'Html шаблон',
                'verbose_name_plural': 'Html шаблоны',
            },
        ),
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Имя')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('block_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blocks.blockrelationship')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blocks.template', verbose_name='html шаблон')),
            ],
            options={
                'verbose_name': 'навбар',
                'verbose_name_plural': 'навбар`ы',
            },
        ),
        migrations.CreateModel(
            name='ExampleBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Имя')),
                ('button_text', models.CharField(max_length=20, verbose_name='Текст кнопки')),
                ('button_ref', models.CharField(max_length=20, verbose_name='Ссылка для кнопки')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('body', models.TextField(max_length=1000, verbose_name='Основной текст')),
                ('image1', models.ImageField(upload_to='images/', verbose_name='Первое изображение')),
                ('image2', models.ImageField(upload_to='images/', verbose_name='Второе изображение')),
                ('block_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blocks.blockrelationship')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blocks.template', verbose_name='html шаблон')),
            ],
            options={
                'verbose_name': 'Контентный блок',
                'verbose_name_plural': 'Контентные блоки',
            },
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Имя')),
                ('button_text', models.CharField(max_length=20, verbose_name='Текст кнопки')),
                ('button_ref', models.CharField(max_length=20, verbose_name='Ссылка для кнопки')),
                ('title', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('text', models.TextField(max_length=500, verbose_name='Текст')),
                ('image_desctop', models.ImageField(upload_to='images/covers/', verbose_name='Картинка(десктоп)')),
                ('image_mobile', models.ImageField(upload_to='images/covers/', verbose_name='Картинка(смартфон)')),
                ('second_button_text', models.CharField(max_length=20, verbose_name='Текст второй кнопки')),
                ('second_button_ref', models.CharField(max_length=20, verbose_name='Ссылка для второй кнопки')),
                ('block_relation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='blocks.blockrelationship')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blocks.template', verbose_name='html шаблон')),
            ],
            options={
                'verbose_name': 'Обложка',
                'verbose_name_plural': 'Обложки',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('my_order', models.PositiveIntegerField(default=0)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_block', to='blocks.blockrelationship', verbose_name='Блок')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='blocks.page', verbose_name='Страница')),
            ],
            options={
                'verbose_name': 'Блок',
                'verbose_name_plural': 'Блоки',
                'ordering': ['my_order'],
            },
        ),
    ]
