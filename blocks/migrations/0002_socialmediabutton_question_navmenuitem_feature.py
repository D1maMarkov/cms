# Generated by Django 4.2 on 2024-05-12 19:05

import ckeditor.fields
import colorfield.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("blocks", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SocialMediaButton",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("icon", models.ImageField(upload_to="images/social", verbose_name="Изображение")),
                (
                    "background_color",
                    colorfield.fields.ColorField(
                        default="#FFFFFF", image_field=None, max_length=25, samples=None, verbose_name="Цвет фона"
                    ),
                ),
                ("ref", models.CharField(max_length=500, verbose_name="Ссылка на соц. сети")),
                ("text", models.CharField(max_length=100, null=True, verbose_name="Текст")),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buttons",
                        to="blocks.socialmediablock",
                    ),
                ),
            ],
            options={
                "verbose_name": "Социальная сеть",
                "verbose_name_plural": "Социальные сети",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(blank=True, max_length=100, null=True, verbose_name="Заголовок")),
                ("text", ckeditor.fields.RichTextField(max_length=1500, verbose_name="текст вопроса")),
                ("block", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="blocks.questionsblock")),
            ],
            options={
                "verbose_name": "Вопрос",
                "verbose_name_plural": "Вопросы",
            },
        ),
        migrations.CreateModel(
            name="NavMenuItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("button_text", models.CharField(blank=True, max_length=20, null=True, verbose_name="Текст кнопки")),
                (
                    "button_ref",
                    models.CharField(blank=True, max_length=20, null=True, verbose_name="Ссылка для кнопки"),
                ),
                (
                    "navbar",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="menu_items",
                        to="blocks.navbar",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Feature",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(blank=True, max_length=100, null=True, verbose_name="Заголовок")),
                ("icon", models.ImageField(upload_to="features", verbose_name="Иконка")),
                ("description", models.TextField(verbose_name="Пояснение")),
                (
                    "block",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="features",
                        to="blocks.featuresblock",
                        verbose_name="Блок",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
