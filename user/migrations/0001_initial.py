# Generated by Django 4.2 on 2024-08-02 19:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("domens", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(max_length=100, verbose_name="Имя пользователя")),
                ("second_name", models.CharField(blank=True, max_length=200, null=True, verbose_name="Фамлия")),
                ("phone", models.CharField(max_length=12, null=True, verbose_name="Номер телефона")),
                ("phone_is_confirmed", models.BooleanField(default=False, verbose_name="Телефон подтвержден")),
                ("email", models.CharField(max_length=200, null=True, verbose_name="E-mail")),
                ("new_email", models.CharField(blank=True, max_length=200, null=True, verbose_name="новый E-main")),
                ("email_is_confirmed", models.BooleanField(default=False, verbose_name="Почта подтверждена")),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True, verbose_name="пользователь создан")),
                ("profile_picture", models.ImageField(blank=True, null=True, upload_to="", verbose_name="аватарка")),
                ("staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "register_on_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="register_on_domain",
                        to="domens.domain",
                        verbose_name="зарегистрирован на домене",
                    ),
                ),
                (
                    "register_on_site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="register_on_site",
                        to="domens.site",
                        verbose_name="зарегистрирован на сайте",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "ordering": ["-created_at"],
            },
        ),
    ]
